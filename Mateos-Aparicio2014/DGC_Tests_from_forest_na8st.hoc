xopen("DGC_Tests_from_file_na8st.hoc")


proc main() { local i, j, p, ij, gid, node, nodeSize, nodeNumber, treeHeight strdef cmd, local_forest_path, local_results_path
    
    // forest_config and task_id and batch_size are variables that
    // should be set on the command line, e.g. nrniv -c "task_id=1" 
    // -c "batch_size=20" -c "strdef forest_config" -c "forest_config=\"config.hoc\""

    nodeSize = 5000 
    nodeNumber = int(ncells / nodeSize)
    treeHeight = int((log10(nodeNumber+1) / log10(2))+1)
    
    load_file (forest_config)
    
    local_results_path=results_path    
    sprint(cmd, "mkdir -p %s", local_results_path)
    system(cmd)
    
    if (ncells > nodeSize) {
        for (gid=task_id; gid <= ncells; gid += batch_size)  {
            
            local_forest_path=forest_path
            node=int(gid/nodeSize)
            
            for (j=treeHeight-1; j >= 0; j = j-1) {
                p = 2^j
                if (node >= p) {
                    node = node-p
                    sprint(local_forest_path, "%s/1", local_forest_path)
                } else {
                    sprint(local_forest_path, "%s/0", local_forest_path)
                }
            }
            
            printf ("local_forest_path = %s\n", local_forest_path)
            passive_test (local_forest_path, local_results_path, gid)
            threshold_test (local_forest_path, local_results_path, gid)
            single_ap_test (local_forest_path, local_results_path, gid)
            ap_rate_test (local_forest_path, local_results_path, gid)
        }
    } else {
        
        local_forest_path=forest_path
        
        printf ("local_forest_path = %s\n", local_forest_path)
        passive_test (local_forest_path, local_results_path, gid)
        threshold_test (local_forest_path, local_results_path, gid)
        single_ap_test (local_forest_path, local_results_path, gid)
        ap_rate_test (local_forest_path, local_results_path, gid)
    }
}

main()

