
objref se
proc synapse_group_pulse_test () { local gid, groupsize localobj gc, synlist, w, v, logfile
    
    strdef label, msg, log_fn
    
    gid = $1
    gc = $o2
    synlist = $o3
    w = $o4
    groupsize = $5
    v_init = $6
    label = $s7
    logfile = $o8
    
    xopen("DGC_ppsyn.ses")
    v = gc.synpulsetest(synlist,w,groupsize,v_init)
}


proc synapse_group_test () { local gid, w, rs localobj gc, synlist, v, vv, logfile
    
    strdef label, msg, log_fn
    
    gid = $1
    gc = $o2
    synlist = $o3
    w = $4
    rs = $5
    v_holding = $6
    v_init = $7
    label = $s8
    logfile = $o9
    
    vv = new Vector()
    vv.append(0,0,0,0,0,0)
    
    
    gc.soma { 
        se = new SEClamp(0.5) 
        se.rs = rs
    }
    xopen("DGC_syn.ses")
    v = gc.syntest(synlist,se,w,v_holding,v_init)
    vv = vv.add(v)
    
    amp = vv.x(0)
    t_10_90 = vv.x(1)
    t_20_80 = vv.x(2)
    t_all = vv.x(3)
    t_50 = vv.x(4)
    t_decay = vv.x(5)
    

    sprint(msg, "%s synapses: ", label)
    logfile.printf(msg)
    logfile.printf("  Amplitude %f",amp)
    logfile.printf("  10-90 Rise Time %f",t_10_90)
    logfile.printf("  20-80 Rise Time %f",t_20_80)
    logfile.printf("  Decay Time Constant %f\n",t_decay)
    
    printf("%s synapses:\n", label)
    printf("  Amplitude\t\t %f\n",amp)
    printf("  10-90 Rise Time\t\t %f\n",t_10_90)
    printf("  20-80 Rise Time\t\t %f\n",t_20_80)	
    printf("  Decay Time Constant\t %f\n",t_decay)	

}


proc synapse_group_test_up () { local gid, w, rs localobj gc, synlist, v, vv, logfile
    
    strdef label, msg, log_fn
    
    gid = $1
    gc = $o2
    synlist = $o3
    w = $4
    rs = $5
    v_holding = $6
    v_init = $7
    label = $s8
    logfile = $o9
    
    vv = new Vector()
    vv.append(0,0,0,0,0,0)
    
    gc.soma { 
        se = new SEClamp(0.5) 
        se.rs = rs
    }
    xopen("DGC_syn.ses")
    
    v = gc.syntest_up(synlist,se,w,v_holding,v_init)
    vv = vv.add(v)
    
    amp = vv.x(0)
    t_10_90 = vv.x(1)
    t_20_80 = vv.x(2)
    t_all = vv.x(3)
    t_50 = vv.x(4)
    t_decay = vv.x(5)
    
    sprint(msg, "%s synapses: ", label)
    logfile.printf(msg)
    logfile.printf("  Amplitude %f",amp)
    logfile.printf("  10-90 Rise Time %f",t_10_90)
    logfile.printf("  20-80 Rise Time %f",t_20_80)
    logfile.printf("  Decay Time Constant %f\n",t_decay)
    
    printf("%s synapses:\n", label)
    printf("  Amplitude\t\t %f\n",amp)
    printf("  10-90 Rise Time\t\t %f\n",t_10_90)
    printf("  20-80 Rise Time\t\t %f\n",t_20_80)	
    printf("  Decay Time Constant\t %f\n",t_decay)	

}


proc synapse_test() { local gid localobj gc, syn, logfile strdef log_fn, forest_path, results_path
    
    forest_path = $s1
    results_path = $s2
    gid = $3
    
    print "DGC synapse test: gid = ", gid
    
    logfile = new File()
    sprint (log_fn, "%s/DGC_synapse_%06d.dat", results_path, gid )
    logfile.wopen ( log_fn )
    
    gc = new DGC(gid, 1, 1, forest_path, 1)
    synapse_group_test(gid, gc, gc.syns_MC,  0.0002, 1, -70, -70, "MC-GC", logfile)
    
    // HC/BC-GC synapse test; data used from Harney and Jones, 2002
    // Experiments were done at room temperature (21-24 C);
    // 140 mM KCl intracellular solution, 2 mM MgCl extracellular
    //
    // See also:
    // Associative Plasticity at Excitatory Synapses Facilitates Recruitment of Fast-Spiking Interneurons in the Dentate Gyrus
    // Sivakumar Sambandan, Jonas-Frederic Sauer, Imre Vida, and Marlene Bartos 
    //
    gc = new DGC(gid, 1, 1, forest_path, 1)
    celsius = 24 
    for i=0, gc.syns_BC.count()-1 {
        syn = gc.syns_BC.o(i)
        syn.e = 108.73
    }
    for i=0, gc.syns_HC.count()-1 {
        syn = gc.syns_HC.o(i)
        syn.e = 108.73
    }
    for i=0, gc.syns_AA.count()-1 {
        syn = gc.syns_AA.o(i)
        syn.e = 108.73
    }
    synapse_group_test(gid, gc, gc.syns_BC,  0.0001, 5, -60, -70, "BC-GC", logfile)
    synapse_group_test(gid, gc, gc.syns_HC,  0.0006, 5, -60, -70, "HC-GC", logfile)
    synapse_group_test(gid, gc, gc.syns_AA,  0.0004, 5, -60, -70, "AA-GC", logfile)
    
    // HCC/GC synapse test; data used from Savanthrapadian et al., J Neurosci 2014
    gc = new DGC(gid, 1, 1, forest_path, 1)
    for i=0, gc.syns_HCC.count()-1 {
        syn = gc.syns_HCC.o(i)
        syn.e = -29.17
    }
    synapse_group_test(gid, gc, gc.syns_HCC, 0.00015, 5, -70, -70, "HCC-GC", logfile)
    
    /*
    gc = new DGC(gid, 1, 1, forest_path, 1)
    synapse_group_test_up(gid, gc, gc.syns_BC,  0.0001, 5, -60, -70, "BC-GC", logfile)
    synapse_group_test_up(gid, gc, gc.syns_HC,  0.0006, 5, -60, -70, "HC-GC", logfile)
    synapse_group_test_up(gid, gc, gc.syns_AA,  0.0004, 5, -60, -70, "AA-GC", logfile)
   
    gc = new DGC(gid, 1, 1, forest_path, 1)
    synapse_group_test(gid, gc, gc.syns_NGFC_GABAA, 0.00005, -90, -70, "NGFC-GC GABAA", logfile)

    gc = new DGC(gid, 1, 1, forest_path, 1)
    synapse_group_test_up(gid, gc, gc.syns_NGFC_GABAB, 0.0001, -60, -70, "NGFC-GC GABAB", logfile)
    */
    
    v_init = -68
    
    logfile.close()
    
}

objref gc

proc pp_synapse_test() { local i, j, x, npts, gid localobj mppweights, lppweights, mdsec, ddsec, rx, f, logfile strdef log_fn, forest_path, results_path
    
    forest_path = $s1
    results_path = $s2
    gid = $3
    
    mppweights = new Vector()
    lppweights = new Vector()
    
    print "DGC synapse test: gid = ", gid
    
    logfile = new File()
    sprint (log_fn, "%s/DGC_synapse_%06d.dat", results_path, gid )
    logfile.wopen ( log_fn )
    
    gc = new DGC(gid, 1, 1, forest_path, 1)
    
    f = new File ()
    f.ropen ("dat/MPPsynweights.dat")
    mppweights.scanf(f)
    f.close()
    
    f = new File ()
    f.ropen ("dat/LPPsynweights.dat")
    lppweights.scanf(f)
    f.close()
    
    // Values to produce a spike with 50 PP concurrent activations
    mppweights.mul(1.5)
    lppweights.mul(1.6)
    
    mdsec = new Random()
    mdsec.discunif(0,gc.MDidxs.size()-1)
    ddsec = new Random()
    ddsec.discunif(0,gc.DDidxs.size()-1)
    rx = new Random()
    rx.uniform(0,1)
    
    for i = 0, lppweights.size()-1 {
        j = gc.DDidxs.x[ddsec.repick()]
        x = rx.repick()
        gc.dendrites[j] {
            npts = n3d()
        }
        gc.addSyn(8, j, x * npts)
    }
    for i = 0, mppweights.size()-1 {
        j = gc.MDidxs.x[mdsec.repick()]
        x = rx.repick()
        gc.dendrites[j] {
            npts = n3d()
        }
        gc.addSyn(9, j, x * npts)
    }
    
    
    synapse_group_pulse_test(gid, gc, gc.syns_MPP,  mppweights, 50, -70, "MPP-GC", logfile)
    synapse_group_pulse_test(gid, gc, gc.syns_LPP,  lppweights, 50, -70, "LPP-GC", logfile)

    v_init = -68
    
    printf("gc.syns_MPP.count() = %d\n", gc.syns_MPP.count())
    printf("gc.syns_LPP.count() = %d\n", gc.syns_LPP.count())
    forsec gc.all psection()
    
    logfile.close()

}
