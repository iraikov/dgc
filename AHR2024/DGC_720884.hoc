begintemplate DGC

public all, soma, somaprox, prox, distal, allaxon, axon, ais, hillock, apical, sec_soma, sec_apical
public is_art, position, connect2target

objref all, soma, prox, somaprox, distal, apical, hillock, ais, axon, allaxon // Create objects for subsections

create sec_soma
create sec_apical[31]		/* creates the major regions */
create sec_hillock
create sec_ais
create sec_axon
  
proc init() {
       if (numarg() > 0) {
           parameters_from_python($o1)
       } else {
           parameters() 
       }

    celldef()
}

proc parameters() {

     celsius = 25 // temperature
     v_init = -80 // resting potential
     nao0 = 150
     ko0 = 4

     // Passive properties

     Ra0 = 200 // input resistance
     cm0 = 1 // membrane specific conductance

     g_pas0 = 2.6315e-5
       
     // Conductance properties

     prox_gbar_Na = 0.03
     ais_sh_nax = 0
     ais_sha_nax = 0

     hillock_sh_nax = 0
     hillock_sha_nax = 0

     prox_gkbar_Kir = 0.000353903
     
     prox_gbar_fKDR = .005
     prox_gbar_sKDR = .016

     prox_gmax_KA = 0.02
     prox_gmax_KA_scale = 0.1
        
     prox_gtcabar_Ca = 0.00015
     prox_gncabar_Ca = 0.002
     prox_glcabar_Ca = 0.010
     prox_gbkbar_CadepK = 0.0003
     prox_gskbar_CadepK = 0.0005

     prox_gbar_sAHP = 0.001
     prox_cac_sAHP = 0.025

     apical_gbar_Na = 0.018

     apical_gkbar_Kir = 0.000353903

     apical_gmax_KA_scale = 0.02
     apical_gmax_KA_shift = 300.0
     apical_gbar_fKDR = 0.002

     ais_gbar_nax  = 0.04
     ais_gbar_fKDR = 0.03
     ais_gmax_KA = 0.004

     hillock_gbar_nax  = 0.01
     hillock_gbar_fKDR = 0.02
     hillock_gmax_KA = 0.002

     axon_gbar_scale = 0.33
}      


proc parameters_from_python() { localobj param_dict
    
    param_dict = $o1
    
    celsius = param_dict.__getitem__("celsius")
    v_init = param_dict.__getitem__("v_init")
    nao0 = param_dict.__getitem__("nao0")
    ko0 = param_dict.__getitem__("ko0")
    
    Ra0 = param_dict.__getitem__("Ra0")
    cm0 = param_dict.__getitem__("cm0")
    g_pas0 = param_dict.__getitem__("g_pas0")

    prox_gbar_Na = param_dict.__getitem__("prox_gbar_Na")

    prox_gkbar_Kir = param_dict.__getitem__("prox_gkbar_Kir")
    prox_gbar_fKDR = param_dict.__getitem__("prox_gbar_fKDR")
    prox_gbar_sKDR = param_dict.__getitem__("prox_gbar_sKDR")

    prox_gmax_KA = param_dict.__getitem__("prox_gmax_KA")
    prox_gmax_KA_scale = param_dict.__getitem__("prox_gmax_KA_scale")
        
    prox_gtcabar_Ca = param_dict.__getitem__("prox_gtcabar_Ca")
    prox_gncabar_Ca = param_dict.__getitem__("prox_gncabar_Ca")
    prox_glcabar_Ca = param_dict.__getitem__("prox_glcabar_Ca")
    prox_gbkbar_CadepK = param_dict.__getitem__("prox_gbkbar_CadepK")
    prox_gskbar_CadepK = param_dict.__getitem__("prox_gskbar_CadepK")
    prox_gbar_sAHP = param_dict.__getitem__("prox_gbar_sAHP")
    prox_cac_sAHP = param_dict.__getitem__("prox_cac_sAHP")
    
    apical_gbar_Na = param_dict.__getitem__("apical_gbar_Na")
    
    apical_gmax_KA_scale = param_dict.__getitem__("apical_gmax_KA_scale")
    apical_gmax_KA_shift = param_dict.__getitem__("apical_gmax_KA_shift")
    apical_gbar_fKDR = param_dict.__getitem__("apical_gbar_fKDR")
    apical_gkbar_Kir = param_dict.__getitem__("apical_gkbar_Kir")

    ais_sh_nax  = param_dict.__getitem__("ais_sh_nax")
    ais_sha_nax  = param_dict.__getitem__("ais_sha_nax")
    ais_gbar_nax  = param_dict.__getitem__("ais_gbar_nax")
    ais_gbar_fKDR = param_dict.__getitem__("ais_gbar_fKDR")
    ais_gmax_KA = param_dict.__getitem__("ais_gmax_KA")

    hillock_sh_nax  = param_dict.__getitem__("hillock_sh_nax")
    hillock_sha_nax  = param_dict.__getitem__("hillock_sha_nax")
    hillock_gbar_nax  = param_dict.__getitem__("hillock_gbar_nax")
    hillock_gbar_fKDR = param_dict.__getitem__("hillock_gbar_fKDR")
    hillock_gmax_KA = param_dict.__getitem__("hillock_gmax_KA")
    
    axon_gbar_scale = param_dict.__getitem__("axon_gbar_scale")
    
}


// Code from CA1 pyramidal cell model by Tomko et al., 2021
proc distribute_distance(){local i, j, k, vv, x, sc, shift, nlocals localobj sl, localnames, localvals
    strdef stmp, distfunc, mech, varname

  sl = $o1
  mech = $s2
  distfunc = $s3
  nlocals = (numarg()-3) / 2
  for j=0,nlocals-1 {
      i = 4 + j*2
      varname = $si
      i = 4 + j*2 + 1
      vv = $i
      sprint(stmp, "%s = %g", varname, vv)
      execute(stmp)
    } 
  sec_soma distance(0, 0.5)
  sprint(distfunc, "%%s %s(%%f) = %s", mech, distfunc)
  forsec sl for(x, 0) {
    sprint(stmp, distfunc, secname(), x, distance(x), sc, shift)
    execute(stmp)
  }
}

func lambda_f() { local i, x1, x2, d1, d2, lam
    if (n3d() < 2) {
        return 1e5*sqrt(diam/(4*PI*$1*Ra*cm))
    }
    x1 = arc3d(0)
    d1 = diam3d(0)
    lam = 0
    for i=1, n3d()-1 {
        x2 = arc3d(i)
        d2 = diam3d(i)
        lam += (x2 - x1)/sqrt(d1 + d2)
        x1 = x2   d1 = d2
    }
    //  length of the section in units of lambda
    lam *= sqrt(2) * 1e-5*sqrt(4*PI*$1*Ra*cm)
    
    return L/lam
}


proc celldef() { localobj reader
  topol()
  geom()
  geom_nseg()
  geom_rescale()
  geom_nseg()
  subsets()
  biophys()
  e_pas_init()
}

proc topol() { local i

  connect sec_apical[0](0), sec_soma(0)
  for i = 1, 2 connect sec_apical[i](0), sec_apical(1)
  for i = 3, 4 connect sec_apical[i](0), sec_apical[1](1)
  for i = 5, 6 connect sec_apical[i](0), sec_apical[3](1)
  for i = 7, 8 connect sec_apical[i](0), sec_apical[5](1)
  for i = 9, 10 connect sec_apical[i](0), sec_apical[6](1)
  for i = 11, 12 connect sec_apical[i](0), sec_apical[9](1)
  for i = 13, 14 connect sec_apical[i](0), sec_apical[4](1)
  for i = 15, 16 connect sec_apical[i](0), sec_apical[2](1)
  for i = 17, 18 connect sec_apical[i](0), sec_apical[15](1)
  for i = 19, 20 connect sec_apical[i](0), sec_apical[16](1)
  for i = 21, 22 connect sec_apical[i](0), sec_apical[19](1)
  for i = 23, 24 connect sec_apical[i](0), sec_apical[21](1)
  for i = 25, 26 connect sec_apical[i](0), sec_apical[22](1)
  for i = 27, 28 connect sec_apical[i](0), sec_apical[25](1)
  for i = 29, 30 connect sec_apical[i](0), sec_apical[20](1)

  connect sec_hillock(0), sec_soma(1)
  connect sec_ais(0), sec_hillock(1)
  connect sec_axon(0), sec_ais(1)
}

proc geom() {

  sec_soma { nseg=5 L=18 diam=10 }

  sec_apical {pt3dclear()
	pt3dstyle(1, 0, 0, 0)
	pt3dadd(-1.41, 19.41, 7.85, 3.14)
	pt3dadd(-0.63, 25.26, 8.51, 3.14)
  }
  sec_apical[1] {pt3dclear()
	pt3dadd(-0.63, 25.26, 8.51, 3.14)
	pt3dadd(2.73, 28.85, 9.97, 2.24)
	pt3dadd(3.5, 29.53, 9.97, 2.24)
  }
  sec_apical[2] {pt3dclear()
	pt3dadd(-0.63, 25.26, 8.51, 3.14)
	pt3dadd(-4.15, 34.78, 13.52, 2.24)
	pt3dadd(-5.18, 38.37, 13.51, 2.24)
	pt3dadd(-6.21, 43.54, 14.96, 2.24)
	pt3dadd(-6.21, 44.43, 14.96, 2.24)
	pt3dadd(-6.32, 43.82, 14.96, 2.24)
  }
  sec_apical[3] {pt3dclear()
	pt3dadd(3.5, 29.53, 9.97, 2.24)
	pt3dadd(7.88, 34.94, 13.48, 2.24)
	pt3dadd(10.12, 38.75, 14.22, 2.24)
	pt3dadd(11.01, 41.09, 17.4, 2.24)
	pt3dadd(12.04, 43.11, 17.4, 2.24)
	pt3dadd(12.57, 43.7, 15.84, 2.24)
  }
  sec_apical[4] {pt3dclear()
	pt3dadd(3.5, 29.53, 9.97, 2.24)
	pt3dadd(4.37, 39.83, 23.57, 1.8)
	pt3dadd(1.96, 43.77, 28.1, 1.8)
	pt3dadd(-0.36, 48.03, 32.86, 1.8)
	pt3dadd(-1.65, 51.18, 36.79, 1.8)
	pt3dadd(-2.16, 52.75, 37.69, 1.8)
	pt3dadd(-0.1, 57.01, 39.98, 1.8)
	pt3dadd(1.19, 61.73, 44.28, 1.8)
	pt3dadd(1.86, 65.27, 44.28, 1.8)
	pt3dadd(2.89, 72.22, 48.91, 1.8)
	pt3dadd(5.21, 79.18, 49.72, 1.8)
	pt3dadd(5.86, 81.79, 49.72, 1.8)
	pt3dadd(8.44, 87.63, 51.92, 1.8)
	pt3dadd(10.09, 92.71, 51.74, 1.8)
	pt3dadd(11.89, 97.2, 56.32, 1.8)
	pt3dadd(12.67, 101.69, 56.32, 1.8)
	pt3dadd(14.22, 107.76, 57.42, 1.8)
	pt3dadd(16.92, 115.76, 60.66, 1.8)
	pt3dadd(18.47, 121.82, 62.64, 1.8)
	pt3dadd(18.98, 129, 64.26, 1.8)
	pt3dadd(19.92, 133.84, 66.25, 1.8)
	pt3dadd(20.69, 141.47, 65.06, 1.8)
	pt3dadd(21.46, 145.96, 65.06, 1.8)
	pt3dadd(21.21, 148.88, 67.61, 1.8)
	pt3dadd(21.6, 151.62, 67.61, 1.8)
	pt3dadd(20.31, 156.78, 67.61, 1.8)
	pt3dadd(19.79, 158.35, 68.84, 1.8)
	pt3dadd(21.86, 161.27, 68.84, 1.8)
	pt3dadd(23.41, 162.62, 69.3, 1.8)
	pt3dadd(23.66, 166.88, 69.3, 1.8)
	pt3dadd(23.48, 170.29, 73.1, 1.8)
	pt3dadd(23.74, 171.41, 73.73, 1.8)
  }
  sec_apical[5] {pt3dclear()
	pt3dadd(12.57, 43.7, 15.84, 2.24)
	pt3dadd(18.5, 46.62, 22.59, 1.8)
	pt3dadd(21.34, 48.42, 25.49, 1.8)
	pt3dadd(23.66, 50.66, 28.97, 1.8)
	pt3dadd(26.5, 51.56, 31.47, 1.8)
	pt3dadd(28.3, 53.36, 31.47, 1.8)
	pt3dadd(31.14, 54.25, 34.02, 1.8)
	pt3dadd(34.75, 55.15, 37.37, 1.8)
	pt3dadd(40.62, 58.87, 40.94, 1.8)
	pt3dadd(44.74, 65.15, 48.11, 1.8)
	pt3dadd(47.32, 68.97, 50.82, 1.8)
	pt3dadd(50.16, 74.58, 55.25, 1.8)
	pt3dadd(55.44, 78.27, 57.88, 1.8)
	pt3dadd(57.76, 81.86, 61.84, 1.8)
	pt3dadd(59.31, 85, 66.09, 1.8)
	pt3dadd(61.37, 89.04, 68.78, 1.8)
	pt3dadd(65.61, 92.94, 74.18, 1.8)
	pt3dadd(67.67, 95.63, 76.75, 1.8)
	pt3dadd(68.96, 97.88, 75.82, 1.8)
	pt3dadd(69.48, 98.55, 79.56, 1.8)
  }
  sec_apical[6] {pt3dclear()
	pt3dadd(12.57, 43.7, 15.84, 2.24)
	pt3dadd(12.26, 46.59, 15.84, 2.24)
	pt3dadd(14.72, 48.51, 15.84, 2.24)
	pt3dadd(17.82, 51.43, 15.84, 2.24)
	pt3dadd(22.2, 54.8, 15.84, 2.24)
	pt3dadd(27.1, 58.39, 13.61, 2.24)
	pt3dadd(29.16, 59.74, 14.12, 2.24)
	pt3dadd(30.2, 61.54, 14.12, 2.24)
	pt3dadd(32, 62.62, 10.56, 2.24)
  }
  sec_apical[7] {pt3dclear()
	pt3dadd(69.48, 98.55, 79.56, 1.8)
	pt3dadd(76.18, 102.37, 80.56, 1.8)
	pt3dadd(80.57, 105.51, 82.72, 1.8)
	pt3dadd(84.18, 107.98, 84.3, 1.8)
	pt3dadd(88.01, 109.49, 84.3, 1.8)
	pt3dadd(94.46, 115.11, 87.7, 1.8)
	pt3dadd(99.62, 120.27, 86.1, 1.8)
	pt3dadd(102.2, 122.07, 91.19, 1.8)
	pt3dadd(105.81, 125.21, 91.19, 1.8)
	pt3dadd(107.23, 126.42, 92.58, 1.8)
	pt3dadd(109.04, 133.38, 94.41, 1.8)
	pt3dadd(111.87, 139.67, 98.52, 1.8)
	pt3dadd(114.19, 149.32, 101.92, 1.8)
	pt3dadd(117.95, 157.83, 106.36, 1.8)
	pt3dadd(118.98, 161.65, 105.93, 1.8)
	pt3dadd(121.56, 165.91, 107.99, 1.8)
	pt3dadd(123.63, 171.3, 111.04, 1.8)
	pt3dadd(127.61, 176.46, 113.11, 1.8)
	pt3dadd(130.19, 183.42, 117.29, 1.8)
	pt3dadd(132.25, 188.58, 120.54, 1.8)
	pt3dadd(136.98, 194.58, 120.54, 1.8)
	pt3dadd(143.43, 202.67, 124.08, 1.8)
	pt3dadd(148.39, 207.63, 122.59, 1.8)
	pt3dadd(151.75, 212.57, 127.04, 1.8)
	pt3dadd(155.36, 217.76, 128.15, 1.8)
	pt3dadd(157.68, 221.35, 128.15, 1.8)
	pt3dadd(159.81, 224.87, 128.15, 1.8)
	pt3dadd(162.13, 229.36, 124.34, 1.8)
	pt3dadd(163.16, 231.15, 124.34, 1.8)
	pt3dadd(165.74, 233.62, 124.34, 1.8)
	pt3dadd(165.74, 234.29, 126.84, 1.8)
  }
  sec_apical[8] {pt3dclear()
	pt3dadd(69.48, 98.55, 79.56, 1.8)
	pt3dadd(68.23, 102.82, 80.37, 1.8)
	pt3dadd(70.21, 109.83, 85.26, 1.8)
	pt3dadd(71.89, 115.45, 88.27, 1.8)
	pt3dadd(73.96, 121.29, 93.04, 1.8)
	pt3dadd(75.25, 124.88, 94.65, 1.8)
	pt3dadd(77.15, 131.38, 96.95, 1.8)
	pt3dadd(79.73, 137.45, 98.39, 1.8)
	pt3dadd(82.31, 142.16, 102.91, 1.8)
	pt3dadd(85.4, 148.7, 106.1, 1.8)
	pt3dadd(87.41, 151.42, 110.62, 1.8)
	pt3dadd(91.02, 155.68, 109.58, 1.8)
	pt3dadd(92.31, 163.32, 115.24, 1.8)
	pt3dadd(92.17, 168.53, 119.29, 1.8)
	pt3dadd(92.48, 174, 122.4, 1.8)
	pt3dadd(94.29, 179.39, 126.1, 1.8)
	pt3dadd(95.84, 182.53, 131.06, 1.8)
	pt3dadd(97.13, 187.47, 130.37, 1.8)
	pt3dadd(100.22, 195.55, 137.58, 1.8)
	pt3dadd(105.24, 204.45, 144.02, 1.8)
	pt3dadd(110.14, 211.86, 145.92, 1.8)
	pt3dadd(111.17, 215.01, 147.87, 1.8)
	pt3dadd(111.08, 215.1, 146.54, 1.8)
  }
  sec_apical[9] {pt3dclear()
	pt3dadd(32, 62.62, 10.56, 2.24)
	pt3dadd(34.58, 65.32, 9.16, 1.8)
	pt3dadd(38.71, 68.01, 7.17, 1.8)
	pt3dadd(40.25, 69.14, 7.17, 1.8)
	pt3dadd(43.35, 72.05, 5.14, 1.8)
	pt3dadd(43.86, 72.73, 5.92, 1.8)
  }
  sec_apical[10] {pt3dclear()
	pt3dadd(32, 62.62, 10.56, 2.24)
	pt3dadd(33.69, 66.96, 14.86, 1.8)
	pt3dadd(37.04, 70.11, 13.4, 1.8)
	pt3dadd(39.52, 72.12, 15.34, 1.8)
	pt3dadd(40.81, 73.91, 15.99, 1.8)
	pt3dadd(42.62, 75.04, 15.99, 1.8)
	pt3dadd(44.68, 77.51, 15.99, 1.8)
	pt3dadd(47.77, 82, 19.5, 1.8)
	pt3dadd(50.61, 86.94, 20.66, 1.8)
	pt3dadd(53.77, 90.9, 21.23, 1.8)
	pt3dadd(58.67, 97.43, 22.34, 1.8)
	pt3dadd(62.54, 104.17, 22.34, 1.8)
	pt3dadd(65.38, 110.01, 22.34, 1.8)
	pt3dadd(70.7, 116.41, 22.34, 1.8)
	pt3dadd(73.54, 121.8, 23.88, 1.8)
	pt3dadd(76.89, 127.63, 23.88, 1.8)
	pt3dadd(80.29, 132.66, 23.88, 1.8)
	pt3dadd(82.87, 136.93, 23.88, 1.8)
	pt3dadd(85.45, 142.54, 23.88, 1.8)
	pt3dadd(89.58, 151.29, 23.88, 1.8)
	pt3dadd(94.38, 159.16, 25.84, 1.8)
	pt3dadd(99.03, 164.99, 25.84, 1.8)
	pt3dadd(102.38, 169.48, 25.84, 1.8)
	pt3dadd(106.67, 175.14, 27.06, 1.8)
	pt3dadd(110.35, 181.14, 27.06, 1.8)
	pt3dadd(114.74, 187.87, 27.06, 1.8)
	pt3dadd(117.57, 192.14, 27.06, 1.8)
	pt3dadd(119.12, 196.85, 27.06, 1.8)
	pt3dadd(121.15, 201.36, 27.06, 1.8)
	pt3dadd(123.98, 208.1, 26.08, 1.8)
	pt3dadd(127.34, 210.57, 26.86, 1.8)
	pt3dadd(131.46, 215.73, 30.35, 1.8)
	pt3dadd(135.41, 220.16, 30.35, 1.8)
	pt3dadd(137.22, 223.98, 30.35, 1.8)
	pt3dadd(138.76, 229.82, 31.42, 1.8)
	pt3dadd(140.05, 233.63, 31.42, 1.8)
	pt3dadd(142.98, 239.51, 31.42, 1.8)
	pt3dadd(145.04, 242.2, 31.42, 1.8)
	pt3dadd(147.62, 244.45, 31.42, 1.8)
	pt3dadd(150.2, 248.71, 32.82, 1.8)
	pt3dadd(152.01, 254.1, 29.74, 1.8)
	pt3dadd(156.78, 257.64, 28.01, 1.8)
	pt3dadd(157.56, 259.44, 32.54, 1.8)
	pt3dadd(158.33, 262.13, 32.54, 1.8)
	pt3dadd(152.66, 263.03, 32.54, 1.8)
  }
  sec_apical[11] {pt3dclear()
	pt3dadd(43.86, 72.73, 5.92, 1.8)
	pt3dadd(48.46, 73.3, 4.86, 1.8)
	pt3dadd(52.07, 76.22, 0.71, 1.8)
	pt3dadd(54.65, 78.01, 0.71, 1.8)
	pt3dadd(56.19, 80.48, 0.71, 1.8)
	pt3dadd(58.77, 82.95, 0.71, 1.8)
	pt3dadd(60.32, 84.75, 0.71, 1.8)
	pt3dadd(61.87, 86.77, 0.71, 1.8)
	pt3dadd(63.67, 88.34, 0.71, 1.8)
	pt3dadd(66.25, 91.03, 0.71, 1.8)
	pt3dadd(75.11, 95.61, 0.71, 1.8)
	pt3dadd(78.72, 98.53, 0.71, 1.8)
	pt3dadd(83.11, 101.22, 1.18, 1.8)
	pt3dadd(87.49, 104.82, -3.39, 1.8)
  }

  sec_apical[11] {	pt3dadd(93.47, 108.04, -3.39, 1.8)
	pt3dadd(99.15, 112.08, -5.92, 1.8)
	pt3dadd(103.53, 116.57, -5.92, 1.8)
	pt3dadd(109.46, 121.74, -7.44, 1.8)
	pt3dadd(114.96, 126.16, -7.44, 1.8)
	pt3dadd(119.86, 130.88, -7.44, 1.8)
	pt3dadd(126.05, 134.69, -9.54, 1.8)
	pt3dadd(133.78, 139.63, -9.54, 1.8)
	pt3dadd(142.45, 144.66, -10.7, 1.8)
	pt3dadd(148.64, 148.93, -10.7, 1.8)
	pt3dadd(150.45, 149.6, -10.7, 1.8)
	pt3dadd(153.54, 152.74, -10.75, 1.35)
	pt3dadd(156.64, 155.21, -10.75, 1.35)
	pt3dadd(163.45, 158.42, -12.31, 1.35)
	pt3dadd(166.28, 160.01, -12.96, 1.35)
	pt3dadd(171.18, 162.71, -12.96, 1.35)
	pt3dadd(173.25, 163.83, -12.1, 1.35)
	pt3dadd(177.37, 167.65, -12.1, 1.35)
	pt3dadd(182.02, 170.12, -16.26, 1.35)
	pt3dadd(186.53, 173.02, -16.26, 1.35)
	pt3dadd(190.14, 175.26, -16.26, 1.35)
	pt3dadd(192.97, 176.61, -16.26, 1.35)
	pt3dadd(195.81, 178.18, -16.26, 1.35)
	pt3dadd(198.65, 179.3, -16.26, 1.35)
	pt3dadd(202.77, 181.32, -15.86, 1.35)
	pt3dadd(207.67, 186.71, -17.2, 1.35)
	pt3dadd(210.85, 187.49, -18.92, 1.35)
	pt3dadd(216.01, 191.3, -21.76, 1.35)
	pt3dadd(219.62, 194.45, -21.71, 1.35)
	pt3dadd(223.74, 196.69, -22.16, 1.35)
	pt3dadd(225.91, 198.2, -25.14, 1.35)
	pt3dadd(226.43, 202.02, -25.14, 1.35)
	pt3dadd(228.75, 207.63, -33.34, 1.35)
	pt3dadd(232.62, 212.57, -33.34, 1.35)
	pt3dadd(235.19, 216.83, -33.34, 1.35)
	pt3dadd(237.66, 219.59, -33.34, 1.35)
	pt3dadd(239.47, 222.96, -32.46, 1.35)
	pt3dadd(239.73, 224.08, -33.7, 1.35)
	pt3dadd(239.73, 224.08, -36.67, 1.35)
  }
  sec_apical[12] {pt3dclear()
	pt3dadd(43.86, 72.73, 5.92, 1.8)
	pt3dadd(47.04, 77.19, 4.77, 1.8)
	pt3dadd(48.58, 80.56, 4.77, 1.8)
	pt3dadd(51.16, 85.27, 4.77, 1.8)
	pt3dadd(53.48, 90.43, 6.53, 1.8)
	pt3dadd(56.38, 97.03, 7.27, 1.8)
	pt3dadd(58.44, 99.95, 7.27, 1.8)
	pt3dadd(61.54, 104.67, 8.79, 1.8)
	pt3dadd(63.34, 107.58, 8.79, 1.8)
	pt3dadd(66.38, 111.31, 8.79, 1.8)
	pt3dadd(69.22, 117.15, 10.7, 1.8)
	pt3dadd(71.28, 120.29, 10.72, 1.8)
	pt3dadd(74.37, 124.11, 10.72, 1.8)
	pt3dadd(76.18, 127.7, 10.72, 1.8)
	pt3dadd(78.92, 134.21, 10.72, 1.8)
	pt3dadd(80.98, 139.6, 10.72, 1.8)
	pt3dadd(82.53, 142.96, 10.72, 1.8)
	pt3dadd(84.34, 147.68, 10.72, 1.8)
	pt3dadd(86.61, 150.84, 10.72, 1.8)
	pt3dadd(87.38, 152.86, 10.72, 1.8)
	pt3dadd(89.7, 161.19, 14.51, 1.8)
	pt3dadd(90.99, 164.11, 14.51, 1.8)
	pt3dadd(92.28, 168.6, 15.31, 1.8)
	pt3dadd(97.24, 175.68, 17.2, 1.35)
	pt3dadd(101.63, 181.07, 17.2, 1.35)
	pt3dadd(104.46, 184.66, 19.18, 1.35)
	pt3dadd(107.3, 188.25, 19.18, 1.35)
	pt3dadd(109.86, 190.79, 19.18, 1.35)
	pt3dadd(113.99, 195.28, 20.21, 1.35)
	pt3dadd(116.57, 198.2, 22.71, 1.35)
	pt3dadd(118.37, 202.02, 22.71, 1.35)
	pt3dadd(119.41, 204.71, 22.71, 1.35)
	pt3dadd(121.21, 208.08, 22.71, 1.35)
	pt3dadd(125.47, 212.84, 23.4, 1.35)
	pt3dadd(128.31, 215.31, 25.67, 1.35)
	pt3dadd(132.43, 219.57, 26.26, 1.35)
	pt3dadd(135.27, 222.27, 26.26, 1.35)
	pt3dadd(137.07, 224.06, 29.24, 1.35)
	pt3dadd(139.4, 226.76, 30.97, 1.35)
	pt3dadd(143.93, 230.74, 30.55, 1.35)
	pt3dadd(148.31, 235, 32.14, 1.35)
	pt3dadd(151.92, 240.39, 33.54, 1.35)
	pt3dadd(154.24, 244.43, 36.27, 1.35)
	pt3dadd(157.18, 250.56, 36.27, 1.35)
	pt3dadd(159.5, 255.27, 38.52, 1.35)
	pt3dadd(160.53, 257.52, 38.52, 1.35)
	pt3dadd(162.85, 259.76, 38.52, 1.35)
	pt3dadd(162.85, 259.76, 33.77, 1.35)
  }
  sec_apical[13] {pt3dclear()
	pt3dadd(23.74, 171.41, 73.73, 1.8)
	pt3dadd(26.32, 176.35, 77.26, 1.8)
	pt3dadd(27.87, 177.7, 80.59, 1.8)
	pt3dadd(28.9, 181.74, 80.59, 1.8)
	pt3dadd(31.22, 185.56, 85.1, 1.8)
	pt3dadd(33.15, 189.29, 88.96, 1.8)
	pt3dadd(35.47, 194.45, 93.25, 1.8)
	pt3dadd(36.76, 197.82, 97.56, 1.8)
	pt3dadd(35.73, 201.64, 101.35, 1.8)
	pt3dadd(34.69, 206.13, 100.6, 1.8)
	pt3dadd(35.52, 210.81, 103.64, 1.8)
	pt3dadd(36.29, 214.63, 108.33, 1.8)
	pt3dadd(37.32, 219.79, 110.34, 1.8)
	pt3dadd(39.64, 226.98, 114.5, 1.8)
	pt3dadd(41.29, 233.18, 119.22, 1.8)
	pt3dadd(42.32, 239.25, 121.02, 1.8)
	pt3dadd(41.55, 245.31, 121.02, 1.8)
	pt3dadd(42.52, 254.93, 121.02, 1.8)
	pt3dadd(43.81, 263.23, 125.79, 1.8)
	pt3dadd(43.94, 269.33, 127.05, 1.8)
	pt3dadd(44.46, 275.17, 127.64, 1.8)
	pt3dadd(44.72, 279.21, 127.64, 1.8)
	pt3dadd(46.01, 283.03, 131.53, 1.8)
	pt3dadd(46.97, 286.91, 131.53, 1.8)
	pt3dadd(48.52, 288.93, 131.53, 1.8)
	pt3dadd(49.04, 290.06, 133.06, 1.8)
  }
  sec_apical[14] {pt3dclear()
	pt3dadd(23.74, 171.41, 73.73, 1.8)
	pt3dadd(23.23, 178.46, 76.05, 1.8)
	pt3dadd(23.48, 182.72, 76.05, 1.8)
	pt3dadd(24.06, 188.26, 76.05, 1.8)
	pt3dadd(24.83, 194.1, 78.19, 1.8)
	pt3dadd(25.35, 197.24, 78.19, 1.8)
	pt3dadd(25.86, 203.53, 80.87, 1.8)
	pt3dadd(25.23, 210.46, 83.71, 1.8)
	pt3dadd(25.43, 214.54, 85.62, 1.8)
	pt3dadd(25.68, 219.71, 86.12, 1.8)
	pt3dadd(26.2, 224.42, 86.01, 1.8)
	pt3dadd(26.72, 227.56, 87.9, 1.8)
	pt3dadd(26.97, 233.63, 88.42, 1.8)
	pt3dadd(27.66, 241.31, 91.54, 1.8)
	pt3dadd(28.17, 246.47, 91.54, 1.8)
	pt3dadd(29.21, 250.96, 93.38, 1.8)
	pt3dadd(30.75, 257.02, 93.38, 1.8)
	pt3dadd(31.72, 262.26, 92.75, 1.8)
	pt3dadd(30.94, 269.45, 97.02, 1.8)
	pt3dadd(30.43, 277.75, 100.06, 1.8)
	pt3dadd(29.77, 281.27, 100.06, 1.8)
	pt3dadd(31.57, 286.88, 100.06, 1.8)
	pt3dadd(32.09, 292.04, 100.06, 1.8)
	pt3dadd(33.89, 296.31, 100.06, 1.8)
	pt3dadd(37.55, 303.46, 102.04, 1.8)
	pt3dadd(38.33, 305.25, 102.36, 1.8)
  }
  sec_apical[15] {pt3dclear()
	pt3dadd(-6.32, 43.82, 14.96, 2.24)
	pt3dadd(-4.25, 51.46, 16.15, 2.24)
	pt3dadd(-3.48, 53.03, 16.15, 2.24)
	pt3dadd(-3.22, 57.29, 16.15, 2.24)
	pt3dadd(-2.19, 61.11, 16.91, 2.24)
	pt3dadd(-1.16, 65.38, 17.35, 1.8)
	pt3dadd(-0.28, 69.09, 20.37, 1.8)
	pt3dadd(-0.28, 71.33, 20.37, 1.8)
  }
  sec_apical[16] {pt3dclear()
	pt3dadd(-6.32, 43.82, 14.96, 2.24)
	pt3dadd(-9.61, 50.21, 14.96, 2.24)
	pt3dadd(-10.38, 54.02, 14.96, 2.24)
	pt3dadd(-10.64, 55.15, 15.25, 2.24)
  }
  sec_apical[17] {pt3dclear()
	pt3dadd(-0.28, 71.33, 20.37, 1.8)
	pt3dadd(2.55, 76.72, 20.37, 1.8)
	pt3dadd(4.62, 81.21, 20.37, 1.8)
	pt3dadd(6.94, 86.83, 22.59, 1.8)
	pt3dadd(7.92, 88.05, 22.59, 1.8)
	pt3dadd(9.46, 90.29, 22.59, 1.8)
	pt3dadd(13.59, 93.66, 22.59, 1.8)
	pt3dadd(19.01, 98.37, 26.76, 1.8)
	pt3dadd(23.91, 103.76, 26.76, 1.8)
	pt3dadd(27.52, 108.25, 29.13, 1.8)
	pt3dadd(33.42, 113.04, 29.13, 1.8)
	pt3dadd(36.77, 116.85, 32.59, 1.8)
	pt3dadd(41.93, 120.67, 32.59, 1.8)
	pt3dadd(46.05, 126.51, 36.78, 1.8)
	pt3dadd(49.49, 128.74, 36.78, 1.8)
	pt3dadd(53.62, 132.33, 36.78, 1.8)
	pt3dadd(56.2, 135.25, 36.78, 1.8)
	pt3dadd(58.26, 137.95, 36.78, 1.8)
	pt3dadd(62.39, 142.66, 37.39, 1.8)
	pt3dadd(65.48, 146.03, 37.39, 1.8)
	pt3dadd(70.18, 151.04, 37.39, 1.8)
	pt3dadd(73.28, 155.53, 40.02, 1.8)
	pt3dadd(76.12, 160.69, 40.91, 1.8)
	pt3dadd(78.69, 165.4, 42.42, 1.8)
	pt3dadd(81.58, 168.87, 42.42, 1.8)
	pt3dadd(83.64, 174.48, 45.36, 1.8)
	pt3dadd(85.45, 179.42, 45.36, 1.8)
	pt3dadd(87.51, 185.03, 47.86, 1.8)
	pt3dadd(91.35, 191.16, 47.86, 1.8)
	pt3dadd(94.71, 194.08, 47.86, 1.8)
	pt3dadd(98.32, 199.24, 47.86, 1.35)
	pt3dadd(99.86, 201.04, 47.86, 1.35)
	pt3dadd(101.93, 204.4, 47.86, 1.35)
	pt3dadd(103.43, 206.74, 47.39, 1.35)
	pt3dadd(105.75, 211.46, 49.8, 1.35)
	pt3dadd(108.85, 216.17, 49.8, 1.35)
	pt3dadd(110.65, 218.64, 49.8, 1.35)
	pt3dadd(114.26, 223.58, 49.8, 1.35)
	pt3dadd(116.92, 228.19, 53.73, 1.35)
	pt3dadd(119.5, 233.58, 54.3, 1.35)
	pt3dadd(120.27, 235.15, 54.3, 1.35)
	pt3dadd(121.05, 237.84, 54.3, 1.35)
	pt3dadd(121.05, 239.86, 54.3, 1.35)
	pt3dadd(123.11, 245.25, 56.26, 1.35)
	pt3dadd(123.6, 247.32, 58.16, 1.35)
  }
  sec_apical[18] {pt3dclear()
	pt3dadd(-0.28, 71.33, 20.37, 1.8)
	pt3dadd(-1.03, 77.33, 23.46, 1.8)
	pt3dadd(-0.52, 82.05, 23.46, 1.8)
	pt3dadd(0, 85.19, 23.46, 1.8)
  }

  sec_apical[18] {	pt3dadd(0.52, 90.13, 25.3, 1.8)
	pt3dadd(-0.03, 95.71, 26.09, 1.8)
	pt3dadd(1.52, 102.89, 30.46, 1.8)
	pt3dadd(3.32, 110.53, 30.46, 1.8)
	pt3dadd(5.09, 116.31, 31.66, 1.8)
	pt3dadd(7.93, 120.8, 31.66, 1.8)
	pt3dadd(10.25, 123.94, 35.81, 1.8)
	pt3dadd(10.25, 129.78, 34.13, 1.8)
	pt3dadd(8.79, 136.21, 34.13, 1.8)
	pt3dadd(8.54, 141.37, 34.13, 1.8)
	pt3dadd(8.28, 148.11, 36.61, 1.8)
	pt3dadd(8.34, 155.26, 37.15, 1.8)
	pt3dadd(8.34, 159.75, 37.15, 1.8)
	pt3dadd(8.6, 163.56, 37.15, 1.8)
	pt3dadd(8.86, 167.16, 36.31, 1.8)
	pt3dadd(8.68, 172.24, 39.03, 1.8)
	pt3dadd(8.43, 179.42, 43.37, 1.8)
	pt3dadd(8.43, 185.93, 43.37, 1.8)
	pt3dadd(8.86, 189.91, 47.53, 1.8)
	pt3dadd(9.37, 192.16, 47.53, 1.8)
	pt3dadd(8.86, 197.32, 50.54, 1.8)
	pt3dadd(9.37, 200.91, 50.54, 1.8)
	pt3dadd(9.12, 206.3, 54.88, 1.8)
	pt3dadd(9.6, 208.77, 54.88, 1.8)
	pt3dadd(10.63, 215.05, 58.68, 1.8)
	pt3dadd(11.15, 216.85, 58.68, 1.8)
	pt3dadd(12.44, 223.14, 57.93, 1.8)
	pt3dadd(12.69, 226.05, 62.66, 1.8)
	pt3dadd(12.74, 227.89, 62.66, 1.8)
	pt3dadd(16.61, 235.08, 61.7, 1.8)
	pt3dadd(17.38, 238.45, 64.56, 1.8)
	pt3dadd(18.67, 243.83, 69.1, 1.8)
	pt3dadd(20.29, 247.04, 68.02, 1.8)
	pt3dadd(20.29, 252.65, 72.93, 1.8)
	pt3dadd(20.29, 260.29, 75.31, 1.8)
	pt3dadd(20.29, 264.33, 78, 1.8)
	pt3dadd(21.12, 265.4, 78, 1.8)
	pt3dadd(20.86, 266.74, 78, 1.8)
	pt3dadd(20.86, 273.93, 82.89, 1.8)
	pt3dadd(21.63, 277.74, 82.89, 1.8)
	pt3dadd(22.92, 281.56, 82.89, 1.8)
	pt3dadd(23.44, 286.05, 82.89, 1.8)
	pt3dadd(25.35, 292.61, 83.4, 1.8)
	pt3dadd(26.12, 294.65, 83.4, 1.8)
	pt3dadd(26.89, 300.27, 85.86, 1.8)
	pt3dadd(27.67, 303.41, 88.26, 1.8)
	pt3dadd(29.29, 305.97, 91.69, 1.8)
	pt3dadd(31.35, 307.09, 91.69, 1.8)
  }
  sec_apical[19] {pt3dclear()
	pt3dadd(-10.64, 55.15, 15.25, 2.24)
	pt3dadd(-10.64, 59.86, 11.55, 2.24)
	pt3dadd(-10.9, 63.9, 11.55, 2.24)
	pt3dadd(-12.03, 64.34, 8.17, 2.24)
	pt3dadd(-12.29, 67.04, 8.17, 2.24)
	pt3dadd(-12.29, 67.71, 8.17, 2.24)
  }
  sec_apical[20] {pt3dclear()
	pt3dadd(-10.64, 55.15, 15.25, 2.24)
	pt3dadd(-13.09, 58.89, 18.18, 1.8)
	pt3dadd(-14.13, 62.71, 17.08, 1.8)
	pt3dadd(-15.16, 64.95, 20.54, 1.8)
	pt3dadd(-16.45, 66.75, 25.06, 1.8)
	pt3dadd(-18.25, 69.89, 25.06, 1.8)
	pt3dadd(-20.06, 73.48, 29.44, 1.8)
	pt3dadd(-21.15, 75.49, 29.08, 1.8)
	pt3dadd(-22.69, 79.98, 33.85, 1.8)
	pt3dadd(-24.76, 86.72, 38.68, 1.8)
	pt3dadd(-26.05, 91.88, 38.85, 1.8)
	pt3dadd(-27.66, 95.27, 43.84, 1.8)
	pt3dadd(-27.66, 100.43, 43.84, 1.8)
	pt3dadd(-28.95, 104.02, 44.74, 1.8)
	pt3dadd(-29.98, 109.41, 47.87, 1.8)
	pt3dadd(-31.66, 111.77, 48.27, 1.8)
	pt3dadd(-33.21, 116.03, 48.27, 1.8)
	pt3dadd(-34.76, 119.63, 52.53, 1.8)
	pt3dadd(-36.31, 124.34, 52.53, 1.8)
	pt3dadd(-37.08, 127.48, 51.9, 1.8)
	pt3dadd(-39.44, 133.13, 56.58, 1.8)
	pt3dadd(-41.76, 139.42, 56.58, 1.8)
	pt3dadd(-44.59, 145.48, 56.58, 1.8)
	pt3dadd(-47.29, 149.99, 56.58, 1.8)
	pt3dadd(-49.1, 155.83, 56.58, 1.8)
	pt3dadd(-50.13, 160.99, 56.58, 1.8)
	pt3dadd(-51.42, 169.52, 56.58, 1.8)
	pt3dadd(-53.32, 175.56, 56.58, 1.8)
	pt3dadd(-55.38, 183.64, 59.3, 1.8)
	pt3dadd(-56.42, 189.7, 59.3, 1.8)
	pt3dadd(-56.26, 193.94, 59.3, 1.8)
	pt3dadd(-57.55, 201.12, 60.26, 1.8)
	pt3dadd(-60.13, 210.1, 63.34, 1.8)
	pt3dadd(-62.64, 219.28, 63.34, 1.8)
	pt3dadd(-64.96, 228.03, 63.65, 1.8)
	pt3dadd(-66.61, 237.33, 66.71, 1.8)
	pt3dadd(-68.67, 245.18, 66.71, 1.8)
	pt3dadd(-68.97, 247.99, 69.56, 1.8)
  }
  sec_apical[21] {pt3dclear()
	pt3dadd(-12.29, 67.71, 8.17, 2.24)
	pt3dadd(-10.23, 75.12, 7.1, 1.8)
	pt3dadd(-8.94, 79.38, 7.1, 1.8)
	pt3dadd(-6.54, 84.91, 11.7, 1.8)
	pt3dadd(-4.99, 90.3, 10.69, 1.8)
	pt3dadd(-4.47, 93.44, 10.69, 1.8)
	pt3dadd(-4.73, 99.05, 10.69, 1.8)
	pt3dadd(-3.37, 105.18, 12.87, 1.8)
	pt3dadd(-3.11, 108.1, 12.87, 1.8)
	pt3dadd(-2.85, 111.25, 12.87, 1.8)
	pt3dadd(-2.85, 111.92, 12.87, 1.8)
	pt3dadd(-2.59, 119.1, 15.94, 1.8)
	pt3dadd(-2.72, 123.81, 15.94, 1.8)
	pt3dadd(-2.97, 128.53, 15.94, 1.8)
	pt3dadd(-3.49, 134.14, 16.87, 1.8)
	pt3dadd(-2.72, 140.43, 18.72, 1.8)
	pt3dadd(-2.4, 145.44, 18.72, 1.8)
	pt3dadd(-2.92, 150.38, 18.72, 1.8)
	pt3dadd(-3.17, 154.64, 18.72, 1.8)
	pt3dadd(-3.43, 157.56, 18.72, 1.8)
	pt3dadd(-3.43, 162.05, 18.72, 1.8)
	pt3dadd(-3.26, 165.02, 18.72, 1.8)
	pt3dadd(-3.26, 170.85, 18.72, 1.8)
	pt3dadd(-4.55, 176.24, 18.72, 1.8)
	pt3dadd(-3.77, 180.28, 18.72, 1.8)
	pt3dadd(-1.79, 184.14, 18.72, 1.8)
	pt3dadd(-1.02, 186.83, 18.72, 1.8)
	pt3dadd(0.78, 192.22, 18.72, 1.8)
	pt3dadd(1.82, 196.49, 18.72, 1.8)
	pt3dadd(2.85, 205.24, 18.72, 1.8)
	pt3dadd(3.97, 209.56, 18.72, 1.8)
	pt3dadd(4.75, 212.93, 18.72, 1.8)
	pt3dadd(4.75, 218.09, 18.72, 1.8)
	pt3dadd(4.75, 218.54, 20.18, 1.8)
  }
  sec_apical[22] {pt3dclear()
	pt3dadd(-12.29, 67.71, 8.17, 2.24)
	pt3dadd(-14.64, 74.66, 5.4, 1.8)
	pt3dadd(-15.93, 76.9, 2.66, 1.8)
	pt3dadd(-17.73, 81.17, -1.17, 1.8)
	pt3dadd(-19.02, 81.84, -0.41, 1.8)
	pt3dadd(-20.05, 85.66, -0.41, 1.8)
	pt3dadd(-21.66, 89.29, -1.56, 1.8)
	pt3dadd(-24.24, 96.92, -8.34, 1.8)
	pt3dadd(-27.34, 102.76, -8.34, 1.8)
	pt3dadd(-28.37, 105.9, -9.52, 1.8)
	pt3dadd(-29.29, 107, -9.52, 1.8)
  }
  sec_apical[23] {pt3dclear()
	pt3dadd(4.75, 218.54, 20.18, 1.8)
	pt3dadd(5.52, 224.83, 19.66, 1.8)
	pt3dadd(5.23, 228.49, 19.66, 1.8)
	pt3dadd(5.74, 231.63, 19.66, 1.8)
	pt3dadd(6.52, 235.23, 19.66, 1.8)
	pt3dadd(7.03, 238.59, 19.66, 1.8)
	pt3dadd(7.29, 242.63, 19.66, 1.8)
	pt3dadd(7.4, 248.31, 19.66, 1.8)
	pt3dadd(6.88, 252.13, 25.04, 1.8)
	pt3dadd(8.95, 257.74, 25.04, 1.8)
	pt3dadd(11.27, 264.25, 25.04, 1.8)
	pt3dadd(12.37, 268.79, 25.04, 1.8)
	pt3dadd(14.18, 274.18, 25.04, 1.8)
	pt3dadd(15.73, 278.67, 24.94, 1.8)
	pt3dadd(14.95, 282.93, 28.7, 1.8)
	pt3dadd(14.94, 287.14, 28.7, 1.8)
	pt3dadd(14.68, 289.61, 28.7, 1.8)
	pt3dadd(15.72, 291.18, 28.7, 1.8)
	pt3dadd(16.23, 293.65, 28.98, 1.8)
  }
  sec_apical[24] {pt3dclear()
	pt3dadd(4.75, 218.54, 20.18, 1.8)
	pt3dadd(2.68, 227.68, 17.36, 1.8)
	pt3dadd(3.19, 231.94, 17.36, 1.8)
	pt3dadd(3.45, 238.23, 16.02, 1.8)
	pt3dadd(4.06, 242.11, 12.79, 1.8)
	pt3dadd(3.8, 245.03, 14.71, 1.8)
	pt3dadd(3.54, 252.22, 10.98, 1.8)
	pt3dadd(3.54, 258.73, 8.94, 1.8)
	pt3dadd(4.77, 262.51, 8.94, 1.8)
	pt3dadd(4.26, 264.54, 9.26, 1.8)
	pt3dadd(4.26, 267.9, 7.5, 1.8)
	pt3dadd(4, 271.27, 7.5, 1.8)
	pt3dadd(1.94, 275.76, 7.5, 1.8)
	pt3dadd(0.91, 280.25, 3.91, 1.8)
	pt3dadd(-1.18, 286.36, 3.91, 1.8)
	pt3dadd(-2.21, 294.67, 3.91, 1.8)
	pt3dadd(-2.98, 300.73, 3.91, 1.8)
	pt3dadd(-3.06, 304.27, 3.22, 1.8)
	pt3dadd(1.33, 310.55, 2.42, 1.8)
	pt3dadd(2.87, 311.67, 2.42, 1.8)
	pt3dadd(6.48, 315.71, -1.36, 1.8)
	pt3dadd(7.26, 316.84, -1.36, 1.8)
	pt3dadd(7.26, 317.06, -1.46, 1.8)
  }
  sec_apical[25] {pt3dclear()
	pt3dadd(-29.29, 107, -9.52, 1.8)
	pt3dadd(-29.81, 113.06, -12.94, 1.8)
	pt3dadd(-30.58, 118, -12.94, 1.8)
	pt3dadd(-31.61, 121.14, -12.94, 1.8)
	pt3dadd(-32.9, 126.3, -14.1, 1.8)
	pt3dadd(-33.89, 133.01, -14.1, 1.8)
	pt3dadd(-34.66, 137.3, -15.73, 1.8)
	pt3dadd(-36.47, 146.95, -16.61, 1.8)
	pt3dadd(-36.77, 150.94, -18.32, 1.8)
	pt3dadd(-38.06, 155.65, -19.33, 1.8)
	pt3dadd(-38.58, 161.94, -19.33, 1.8)
	pt3dadd(-39.87, 168.23, -19.33, 1.8)
	pt3dadd(-40.95, 171.91, -19.33, 1.8)
	pt3dadd(-41.72, 177.53, -19.33, 1.8)
	pt3dadd(-42.75, 184.04, -19.33, 1.8)
	pt3dadd(-44.82, 187.85, -19.33, 1.8)
	pt3dadd(-47.24, 196.45, -19.33, 1.8)
	pt3dadd(-48.27, 202.74, -21.38, 1.8)
	pt3dadd(-49.3, 209.7, -21.38, 1.8)
	pt3dadd(-50.35, 213.09, -22.74, 1.8)
	pt3dadd(-52.15, 220.05, -22.74, 1.8)
  }

  sec_apical[25] {	pt3dadd(-53.7, 225.21, -22.74, 1.8)
	pt3dadd(-54.99, 231.5, -22.74, 1.8)
	pt3dadd(-55.94, 238.08, -22.54, 1.8)
	pt3dadd(-56.71, 241.67, -22.54, 1.8)
	pt3dadd(-56.71, 244.59, -24.8, 1.8)
  }
  sec_apical[26] {pt3dclear()
	pt3dadd(-29.29, 107, -9.52, 1.8)
	pt3dadd(-33.5, 112.96, -13.26, 1.8)
	pt3dadd(-36.34, 116.1, -13.26, 1.8)
	pt3dadd(-39.17, 120.14, -13.26, 1.8)
	pt3dadd(-42.53, 127.1, -16.37, 1.8)
	pt3dadd(-44.78, 131.11, -16.37, 1.8)
	pt3dadd(-47.87, 136.73, -16.37, 1.8)
	pt3dadd(-50.45, 142.79, -17.13, 1.8)
	pt3dadd(-54.84, 149.75, -17.22, 1.8)
	pt3dadd(-60.07, 155.09, -17.22, 1.8)
	pt3dadd(-65.23, 162.05, -20.07, 1.8)
	pt3dadd(-68.58, 166.54, -20.07, 1.8)
	pt3dadd(-71.42, 171.47, -20.07, 1.8)
	pt3dadd(-74.87, 173.97, -20.99, 1.8)
	pt3dadd(-77.96, 178.91, -20.99, 1.8)
	pt3dadd(-79.77, 182.5, -20.99, 1.8)
	pt3dadd(-81.57, 185.42, -24.94, 1.8)
	pt3dadd(-83.38, 187.89, -24.94, 1.35)
	pt3dadd(-86.99, 190.81, -24.94, 1.35)
	pt3dadd(-90.47, 195.16, -24.94, 1.35)
	pt3dadd(-94.34, 201.23, -24.94, 1.8)
	pt3dadd(-99.24, 207.96, -26.56, 1.8)
	pt3dadd(-102.33, 209.98, -26.56, 1.8)
	pt3dadd(-107.42, 215.06, -26.43, 1.8)
	pt3dadd(-112.57, 219.55, -28.58, 1.8)
	pt3dadd(-119.8, 225.84, -28.58, 1.8)
	pt3dadd(-123.41, 229.65, -29.06, 1.8)
	pt3dadd(-128.67, 234.19, -29.06, 1.8)
	pt3dadd(-132.28, 239.8, -29.06, 1.8)
	pt3dadd(-141.31, 248.11, -29.06, 1.8)
	pt3dadd(-145.13, 251.02, -29.06, 1.8)
	pt3dadd(-150.8, 255.96, -29.06, 1.8)
	pt3dadd(-155.44, 258.42, -29.06, 1.8)
	pt3dadd(-161.89, 263.36, -29.06, 1.8)
	pt3dadd(-164.49, 263.95, -29.06, 1.8)
	pt3dadd(-167.59, 269.78, -31.53, 1.8)
	pt3dadd(-170.68, 273.38, -31.53, 1.8)
	pt3dadd(-173.52, 274.72, -31.53, 1.8)
	pt3dadd(-179.2, 281.23, -31.83, 1.8)
	pt3dadd(-186.54, 286.46, -31.83, 1.8)
	pt3dadd(-195.05, 292.97, -27.79, 1.8)
	pt3dadd(-200.21, 296.56, -30, 1.8)
	pt3dadd(-205.47, 299.17, -29.57, 1.8)
	pt3dadd(-212.18, 303.21, -29.57, 1.8)
	pt3dadd(-217.85, 307.92, -29.57, 1.8)
	pt3dadd(-221.98, 313.31, -25.06, 1.8)
	pt3dadd(-226.76, 317.07, -25.06, 1.8)
	pt3dadd(-227.79, 317.74, -23.74, 1.8)
  }
  sec_apical[27] {pt3dclear()
	pt3dadd(-56.71, 244.59, -24.8, 1.8)
	pt3dadd(-59.92, 245.6, -20.96, 1.35)
	pt3dadd(-60.17, 249.42, -20.96, 1.35)
	pt3dadd(-58.88, 252.79, -20.96, 1.35)
	pt3dadd(-58.63, 254.81, -24.33, 1.35)
	pt3dadd(-60.43, 257.05, -21.27, 1.35)
	pt3dadd(-62.24, 261.09, -19.48, 1.35)
	pt3dadd(-63.78, 264.24, -19.48, 1.35)
	pt3dadd(-63.78, 268.28, -19.48, 1.35)
	pt3dadd(-67.78, 276.4, -19.48, 1.35)
	pt3dadd(-69.59, 278.87, -19.48, 1.35)
	pt3dadd(-69.59, 281.57, -19.48, 1.35)
	pt3dadd(-72.43, 284.26, -19.48, 1.35)
	pt3dadd(-72.94, 288.75, -19.48, 1.35)
	pt3dadd(-74.09, 292.07, -19.48, 1.35)
	pt3dadd(-75.89, 294.76, -19.48, 1.35)
	pt3dadd(-77.44, 297.45, -19.48, 1.35)
	pt3dadd(-77.7, 299.7, -19.48, 1.35)
	pt3dadd(-78.99, 301.72, -19.48, 1.35)
	pt3dadd(-79.25, 303.29, -20.05, 1.35)
	pt3dadd(-79.76, 307.56, -20.05, 1.35)
	pt3dadd(-81.46, 309.52, -16.85, 1.35)
  }
  sec_apical[28] {pt3dclear()
	pt3dadd(-56.71, 244.59, -24.8, 1.8)
	pt3dadd(-58.72, 250.31, -27.78, 1.8)
	pt3dadd(-58.72, 252.33, -27.78, 1.8)
	pt3dadd(-59.49, 254.13, -27.78, 1.8)
	pt3dadd(-60.78, 259.07, -27.78, 1.8)
	pt3dadd(-62.59, 264.45, -27.78, 1.8)
	pt3dadd(-63.75, 266.52, -27.78, 1.8)
	pt3dadd(-63.49, 269.21, -27.78, 1.8)
	pt3dadd(-66.84, 275.5, -27.78, 1.8)
	pt3dadd(-68.39, 278.19, -27.78, 1.8)
	pt3dadd(-68.28, 284.24, -24.16, 1.8)
	pt3dadd(-69.06, 290.53, -24.16, 1.8)
	pt3dadd(-69.83, 293.67, -24.16, 1.8)
	pt3dadd(-70.09, 297.04, -24.16, 1.8)
	pt3dadd(-69.57, 297.94, -24.16, 1.8)
	pt3dadd(-70.61, 303.32, -24.16, 1.8)
	pt3dadd(-72.26, 305.74, -24.16, 1.8)
	pt3dadd(-73.29, 311.58, -24.16, 1.8)
	pt3dadd(-74.84, 314.95, -24.16, 1.8)
	pt3dadd(-75.36, 314.95, -24.16, 1.8)
	pt3dadd(-75.1, 319.44, -24.16, 1.8)
	pt3dadd(-74.58, 325.95, -24.41, 1.8)
	pt3dadd(-75.69, 328.34, -24.41, 1.8)
	pt3dadd(-78.53, 331.26, -24.41, 1.8)
	pt3dadd(-78.53, 331.26, -25.25, 1.8)
  }
  sec_apical[29] {pt3dclear()
	pt3dadd(-68.97, 247.99, 69.56, 1.8)
	pt3dadd(-67.94, 252.71, 73.01, 1.8)
	pt3dadd(-68.97, 256.07, 72.72, 1.8)
	pt3dadd(-71.29, 261.91, 75.98, 1.35)
	pt3dadd(-74.39, 267.07, 76.78, 1.35)
	pt3dadd(-74.26, 270.24, 81.75, 1.35)
	pt3dadd(-74.77, 270.91, 81.75, 1.35)
	pt3dadd(-77.09, 276.53, 85.69, 1.35)
	pt3dadd(-78.9, 280.37, 90.98, 1.35)
	pt3dadd(-81.99, 286.88, 90.98, 1.35)
	pt3dadd(-82.06, 290.96, 90.98, 1.35)
	pt3dadd(-82.57, 294.56, 91.63, 1.35)
  }
  sec_apical[30] {pt3dclear()
	pt3dadd(-68.97, 247.99, 69.56, 1.8)
	pt3dadd(-72.47, 255.98, 69.56, 1.8)
	pt3dadd(-73.24, 260.02, 69.56, 1.8)
	pt3dadd(-75.53, 264.63, 69.16, 1.8)
	pt3dadd(-77.21, 271.88, 69.16, 1.8)
	pt3dadd(-79.53, 281.31, 69.84, 1.8)
	pt3dadd(-81.33, 290.29, 73.93, 1.8)
	pt3dadd(-83.06, 296.13, 73.93, 1.8)
	pt3dadd(-85.64, 302.2, 73.93, 1.8)
	pt3dadd(-89.25, 308.26, 73.93, 1.8)
	pt3dadd(-92.15, 313.01, 73.93, 1.8)
	pt3dadd(-95.25, 318.85, 73.93, 1.8)
	pt3dadd(-97.83, 322.44, 73.93, 1.8)
	pt3dadd(-97.05, 324.91, 73.93, 1.8)
	pt3dadd(-96.28, 326.71, 76.28, 1.8)
  }


  sec_hillock { nseg=20 L=20 diam(0:1)=5.0:1.4 } // Hillock

  sec_ais { nseg=30 L=30 diam(0:1)=1.4:0.5 } // Axon initial segment

  sec_axon { nseg=15 L=150 diam=0.5 } // Axon proper


  define_shape()
}

proc subsets() { local i // procedure defines subsections

    // subsections: soma/prox region, distal region, apical, hillock, AIS, and axon

    proxlimit = 50 // maximum limit in microns of the proximal region

    all = new SectionList()
    soma = new SectionList()
    somaprox = new SectionList()
    prox = new SectionList()	
    distal = new SectionList()	
    apical = new SectionList()

    sec_soma { soma.append() somaprox.append() all.append() }
    
    napical = 31
    access sec_soma
	distance()
	for i=0,napical-1 {
        // define which dendrites are proximal and distal
        access sec_apical[i]
		 howfar = distance(1, 0.5)
		 if (howfar <  proxlimit) sec_apical[i]  { prox.append() somaprox.append() }
		 if (howfar >= proxlimit) sec_apical[i]  distal.append()
                 apical.append()
                 all.append()
	}

    
    hillock = new SectionList()
    ais = new SectionList()
    axon = new SectionList()
    allaxon = new SectionList()

    sec_hillock { hillock.append() allaxon.append() all.append() }
    sec_ais { ais.append() allaxon.append() all.append() }
    sec_axon { axon.append() allaxon.append() all.append() }
}

//  Biophysics initialization

proc biophys() {

    // Kir conductance
    Kir_vhalfl_fit_ = -98.923594  		// for Botzman I/V curve, fitted
    Kir_kl_fit_     = 10.888538 		// for Botzman I/V curve, fitted
    Kir_q10_fit_    = 1.			// temperature factor, set to 1
    Kir_vhalft_fit_ = 67.0828           	// 3 values for tau func from Stegen et al. 2011
    Kir_at_fit_     = 0.00610779
    Kir_bt_fit_     = 0.0817741

forall {
    v = v_init

    Ra = Ra0
    cm = cm0
    
    insert pas
    g_pas = g_pas0

    e_pas = v 

    insert K_conc
    insert Na_conc

    nao0_Na_conc = nao0
    nai0_Na_conc = 5    
    ko0_K_conc = ko0

}

forsec somaprox {// Somatic and proximal dendrite conductances

        insert Na_Aradi
        gbar_Na_Aradi = prox_gbar_Na

	insert fKDR // Aradi and Holmes (1999) fast and slow KDR channels
	gbar_fKDR = prox_gbar_fKDR // g_fKDR
	
	insert sKDR
	gbar_sKDR = prox_gbar_sKDR // g_fKDR

        insert KA
        gmax_KA = prox_gmax_KA * prox_gmax_KA_scale

        insert Kir21
        gkbar_Kir21 = prox_gkbar_Kir

		mg_i_Kir21 = 4
		spm_i_Kir21 = 1
		gsub_Kir21 = 0.25
		fac_Kir21 = 0.005
		vshiftbs_Kir21 = 0
		vshiftbb_Kir21 = 0
		b_Kir21 = 0.105
		shiftmg_Kir21 = 0.5
		cas_Kir21 = 0.142857
		As_Kir21 = 0.2

        insert Ca_Aradi
        gtcabar_Ca_Aradi = prox_gtcabar_Ca
        gncabar_Ca_Aradi = prox_gncabar_Ca
        glcabar_Ca_Aradi = prox_glcabar_Ca

        insert CadepK_Aradi
        gbkbar_CadepK_Aradi = prox_gbkbar_CadepK
        gskbar_CadepK_Aradi = prox_gskbar_CadepK

        insert sAHP
        gbar_sAHP = prox_gbar_sAHP
        cac_sAHP = prox_cac_sAHP

        insert Ca_conc
}


forsec distal {	// dendritic conductances

    insert Na_Aradi
    gbar_Na_Aradi = apical_gbar_Na

    insert KA   				
    gmax_KA = .01
    
    // KA channel with density increasing towards distal dendrite (Kim 2018)
    // Uniform density Na (Kim 2018)
    // Low uniform density Kdr (Kim 2018)
    insert fKDR
    gbar_fKDR = apical_gbar_fKDR


    insert Kir21
    gkbar_Kir21  = apical_gkbar_Kir

		mg_i_Kir21 = 4
		spm_i_Kir21 = 1
		gsub_Kir21 = 0.25
		fac_Kir21 = 0.005
		vshiftbs_Kir21 = 0
		vshiftbb_Kir21 = 0
		b_Kir21 = 0.105
		shiftmg_Kir21 = 0.5
		cas_Kir21 = 0.142857
		As_Kir21 = 0.2

    insert K_conc
    insert Na_conc

    Ra = Ra0


}

                     

distribute_distance(distal, "gmax_KA", "(1.0/(1.0 + exp(apical_gmax_KA_scale*(%.17g - apical_gmax_KA_shift))))*prox_gmax_KA", "apical_gmax_KA_scale", apical_gmax_KA_scale, "apical_gmax_KA_shift", apical_gmax_KA_shift, "prox_gmax_KA", prox_gmax_KA)

forsec hillock { // hillock conductances

       insert nax
       gbar_nax = hillock_gbar_nax
       sh_nax = hillock_sh_nax
       sha_nax = hillock_sha_nax
         
       insert fKDR
       gbar_fKDR = hillock_gbar_fKDR

       insert KA
       gmax_KA = hillock_gmax_KA

       insert K_conc
       insert Na_conc
}

forsec ais { // AIS conductances

       insert nax
       gbar_nax = ais_gbar_nax
       sh_nax = ais_sh_nax
       sha_nax = ais_sha_nax
         
       insert fKDR
       gbar_fKDR = ais_gbar_fKDR

       insert KA
       gmax_KA = ais_gmax_KA

       insert K_conc
       insert Na_conc
}

forsec axon {

       insert nax
       gbar_nax = ais_gbar_nax * axon_gbar_scale    
       sh_nax = ais_sh_nax
       sha_nax = ais_sha_nax

       insert fKDR
       gbar_fKDR = ais_gbar_fKDR * axon_gbar_scale

       insert KA
       gmax_KA = ais_gmax_KA * axon_gbar_scale
        
       insert K_conc
       insert Na_conc

}      

//  Basic parameters for all compartments


}

//  Reinitialization procedure


proc e_pas_init() {

    v_init_e_pas = -70

    forall {
           v = v_init_e_pas // all compartments reset Vrest
           e_pas = v_init_e_pas
    }

}

proc geom_rescale() { local x

    napical = 31
    dredux = .67 // Rescale dendritic diameter by this factor
    sec_soma distance(0, 0.5)

    for i=0,napical-1 {
        // rescale dendritic diameter
        sec_apical[i] {
                      
                       for j = 0, n3d()-1 {
                          x = arc3d(j) / L
                          howfar = distance(1, x)
                          s = howfar / 100
                          if (s > dredux) { s = dredux }
                          pt3dchange(j, diam3d(j)*(1 - s))
                      }             
        }
    }
}

proc geom_nseg() { local freq, d_lambda
    
    freq = 100 // Hz, frequency at which AC length constant will be computed
    d_lambda = 0.05
    
    soma area(0.5)
    forall { nseg = int((L/(d_lambda*lambda_f(freq))+0.999)/2)*2 + 1  }
    sec_soma { nseg=5 L=18 diam(0:0.5)=3.6:10.0 diam(0.5:1.0)=10.0:3.6  }

}


func is_art()  { return 0 }

proc position() { local i
    
    forall {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1-xx+x3d(i), $2-yy+y3d(i), $3-zz+z3d(i), diam3d(i))
        }
    }
    xx = $1  yy = $2  zz = $3
}

endtemplate DGC

